services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: rag-postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-rag_db}
      - POSTGRES_USER=${POSTGRES_USER:-rag_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-rag_password}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - rag-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-rag_user}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend RAG System
  rag-app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: rag-backend
    ports:
      - "8000:8000"
    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - EMBEDDING_MODEL_NAME=${EMBEDDING_MODEL_NAME:-/app/models/multilingual-e5-large}
      - DOCS_PATH=/app/docs
      - INDEX_PATH=/app/data/faiss_index
      - CHUNK_SIZE=${CHUNK_SIZE:-1000}
      - CHUNK_OVERLAP=${CHUNK_OVERLAP:-200}
      - OPENAI_MODEL_NAME=${OPENAI_MODEL_NAME:-gpt-3.5-turbo}
      - MAX_TOKENS=${MAX_TOKENS:-4000}
      - TEMPERATURE=${TEMPERATURE:-0.7}
      - POSTGRES_DB=${POSTGRES_DB:-rag_db}
      - POSTGRES_USER=${POSTGRES_USER:-rag_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-rag_password}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
    volumes:
      - ./backend/data/logs:/app/data/logs
      - ./docs:/app/docs:ro
      - ./backend/models/multilingual-e5-large:/app/models/multilingual-e5-large
      - faiss-index-data:/app/data/faiss_index
    networks:
      - rag-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 60s

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: rag-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://rag-app:8000
      - REACT_APP_ENVIRONMENT=production
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    networks:
      - rag-network
    depends_on:
      rag-app:
        condition: service_healthy
    restart: unless-stopped



networks:
  rag-network:
    driver: bridge

volumes:
  faiss-index-data:
  postgres-data: 