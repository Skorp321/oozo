import React from 'react';
import ReactMarkdown from 'react-markdown';
import remarkGfm from 'remark-gfm';
import Prism from 'prismjs';
import 'prismjs/themes/prism.css';
import 'prismjs/components/prism-javascript';
import 'prismjs/components/prism-python';
import 'prismjs/components/prism-bash';
import 'prismjs/components/prism-json';
import 'prismjs/components/prism-css';
import 'prismjs/components/prism-sql';

const MarkdownDemo = () => {
  const markdownText = `# –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è Markdown

## –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

### –¢–µ–∫—Å—Ç–æ–≤–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
–≠—Ç–æ **–∂–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç** –∏ *–∫—É—Ä—Å–∏–≤*. –¢–∞–∫–∂–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å ~~–∑–∞—á–µ—Ä–∫–Ω—É—Ç—ã–π —Ç–µ–∫—Å—Ç~~.

### –°–ø–∏—Å–∫–∏

#### –ú–∞—Ä–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫:
- –ü–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç
- –í—Ç–æ—Ä–æ–π —ç–ª–µ–º–µ–Ω—Ç
  - –í–ª–æ–∂–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç
  - –ï—â–µ –æ–¥–∏–Ω –≤–ª–æ–∂–µ–Ω–Ω—ã–π
- –¢—Ä–µ—Ç–∏–π —ç–ª–µ–º–µ–Ω—Ç

#### –ù—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫:
1. –ü–µ—Ä–≤—ã–π –ø—É–Ω–∫—Ç
2. –í—Ç–æ—Ä–æ–π –ø—É–Ω–∫—Ç
3. –¢—Ä–µ—Ç–∏–π –ø—É–Ω–∫—Ç

### –ö–æ–¥

#### –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –∫–æ–¥:
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`console.log('Hello World')\` –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤ –∫–æ–Ω—Å–æ–ª—å.

#### –ë–ª–æ–∫–∏ –∫–æ–¥–∞:

\`\`\`javascript
function greet(name) {
  console.log(\`Hello, \${name}!\`);
  return \`Hello, \${name}!\`;
}

greet('World');
\`\`\`

\`\`\`python
def greet(name):
    print(f"Hello, {name}!")
    return f"Hello, {name}!"

greet("World")
\`\`\`

\`\`\`sql
SELECT name, age, city 
FROM users 
WHERE age > 18 
ORDER BY name;
\`\`\`

### –°—Å—ã–ª–∫–∏
[–°—Å—ã–ª–∫–∞ –Ω–∞ Google](https://google.com)

### –¶–∏—Ç–∞—Ç—ã
> –≠—Ç–æ —Ü–∏—Ç–∞—Ç–∞
> 
> –í—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞ —Ü–∏—Ç–∞—Ç—ã
> 
> > –í–ª–æ–∂–µ–Ω–Ω–∞—è —Ü–∏—Ç–∞—Ç–∞

### –¢–∞–±–ª–∏—Ü—ã
| –ò–º—è | –í–æ–∑—Ä–∞—Å—Ç | –ì–æ—Ä–æ–¥ |
|-----|---------|-------|
| –ò–≤–∞–Ω | 25 | –ú–æ—Å–∫–≤–∞ |
| –ú–∞—Ä–∏—è | 30 | –°–ü–± |
| –ü–µ—Ç—Ä | 22 | –ö–∞–∑–∞–Ω—å |

### –≠–º–æ–¥–∑–∏
üòÄ üöÄ üíª üìö üéØ ‚≠ê

### –ó–∞–¥–∞—á–∏
- [x] –î–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É Markdown
- [x] –î–æ–±–∞–≤–∏—Ç—å –ø–æ–¥—Å–≤–µ—Ç–∫—É —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞
- [ ] –î–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–µ–º—ã
- [ ] –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å`;

  React.useEffect(() => {
    Prism.highlightAll();
  }, []);

  return (
    <div style={{ 
      padding: '20px', 
      maxWidth: '800px', 
      margin: '0 auto',
      fontFamily: 'Arial, sans-serif'
    }}>
      <h1 style={{ color: '#2d3748', textAlign: 'center', marginBottom: '30px' }}>
        –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è Markdown —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞
      </h1>
      
      <div style={{ 
        background: '#f8f9fa', 
        padding: '30px', 
        borderRadius: '12px',
        border: '1px solid #e9ecef',
        boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)'
      }}>
        <ReactMarkdown 
          remarkPlugins={[remarkGfm]}
          components={{
            h1: ({node, ...props}) => <h1 className="markdown-h1" {...props} />,
            h2: ({node, ...props}) => <h2 className="markdown-h2" {...props} />,
            h3: ({node, ...props}) => <h3 className="markdown-h3" {...props} />,
            h4: ({node, ...props}) => <h4 className="markdown-h4" {...props} />,
            h5: ({node, ...props}) => <h5 className="markdown-h5" {...props} />,
            h6: ({node, ...props}) => <h6 className="markdown-h6" {...props} />,
            code: ({node, inline, className, children, ...props}) => {
              const match = /language-(\w+)/.exec(className || '');
              const language = match ? match[1] : '';
              
              if (!inline) {
                return (
                  <pre className="markdown-code-block">
                    <code className={className} {...props}>
                      {children}
                    </code>
                  </pre>
                );
              } else {
                return (
                  <code className="markdown-inline-code" {...props}>
                    {children}
                  </code>
                );
              }
            },
            pre: ({node, ...props}) => <pre className="markdown-pre" {...props} />,
            ul: ({node, ...props}) => <ul className="markdown-ul" {...props} />,
            ol: ({node, ...props}) => <ol className="markdown-ol" {...props} />,
            li: ({node, ...props}) => <li className="markdown-li" {...props} />,
            a: ({node, ...props}) => <a className="markdown-link" target="_blank" rel="noopener noreferrer" {...props} />,
            table: ({node, ...props}) => <table className="markdown-table" {...props} />,
            thead: ({node, ...props}) => <thead className="markdown-thead" {...props} />,
            tbody: ({node, ...props}) => <tbody className="markdown-tbody" {...props} />,
            tr: ({node, ...props}) => <tr className="markdown-tr" {...props} />,
            th: ({node, ...props}) => <th className="markdown-th" {...props} />,
            td: ({node, ...props}) => <td className="markdown-td" {...props} />,
            blockquote: ({node, ...props}) => <blockquote className="markdown-blockquote" {...props} />,
            p: ({node, ...props}) => <p className="markdown-p" {...props} />,
            strong: ({node, ...props}) => <strong className="markdown-strong" {...props} />,
            em: ({node, ...props}) => <em className="markdown-em" {...props} />,
          }}
        >
          {markdownText}
        </ReactMarkdown>
      </div>
      
      <div style={{ 
        marginTop: '20px', 
        textAlign: 'center', 
        color: '#666',
        fontSize: '14px'
      }}>
        <p>‚úÖ Markdown —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!</p>
        <p>–¢–µ–ø–µ—Ä—å –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç–µ –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π Markdown —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.</p>
      </div>
    </div>
  );
};

export default MarkdownDemo; 